{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My MkDocs Project \u00b6 This is an example MkDocs project using the Material theme. Get Started \u00b6 Edit the index.md file to update the homepage content. Add more pages in the docs/ directory. Customize your site using the mkdocs.yml file. Check out the About page to learn more.","title":"Home"},{"location":"#welcome-to-my-mkdocs-project","text":"This is an example MkDocs project using the Material theme.","title":"Welcome to My MkDocs Project"},{"location":"#get-started","text":"Edit the index.md file to update the homepage content. Add more pages in the docs/ directory. Customize your site using the mkdocs.yml file. Check out the About page to learn more.","title":"Get Started"},{"location":"about/","text":"About This Project \u00b6 This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation. Key Features \u00b6 Write documentation in Markdown. Use the Material Design theme for a professional look. Host on GitHub Pages easily.","title":"About"},{"location":"about/#about-this-project","text":"This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation.","title":"About This Project"},{"location":"about/#key-features","text":"Write documentation in Markdown. Use the Material Design theme for a professional look. Host on GitHub Pages easily.","title":"Key Features"},{"location":"multipass/","text":"1. Multipass for Beginners \u00b6 1.1. Introduction \u00b6 Multipass is a tool to generate cloud-style Ubuntu Virtual Machines(VMs) quickly on Linux, macOS and Windows. It provides a simple but powerful Commamd Line Interface that allows you to create your own local mini-cloud, thereby protecting your host machine from being corrupted. From there you can run most risky processes and applications without damaging your machine. The following commands are useful when working with multipass; 1.1.1. Install multipass \u00b6 Run the command below to install multipass snap install multipass 1.1.2. Create an instance in multipass with custom name \u00b6 launch multipass --name ` custom name ` 1.1.3. Use an instance \u00b6 multipass start --name ` custom name ` 1.1.4. To delete an instance \u00b6 multipass delete --name ` custom name ` 1.1.5. To delete all instances \u00b6 multipass delete --all 1.1.6. To recover an instance \u00b6 multipass recover --name ` custom name ` 1.2. Using the docker blueprint in multipass \u00b6 The Docker blueprint gives Multipass users an easy way to create Ubuntu instances with Docker installed. It is based on the latest LTS release of Ubuntu, and includes docker engine and Portainer. To launch the Docker VM with default parameters, run the command multipass launch docker This command will create a virtual machine running the latest version of Ubuntu, with Docker and Portainer installed Run the command below to use Docker VM multipass exec docker docker ` To see created Docker images on your machine, run the command docker images To display a list of all the Docker containers in your machine, run the command docker ps You can use it to see all running and stopped containers with their sizes. To stop a Docker instance, run the command docker stop 1.3. Using alias with the Docker commands \u00b6 The Docker blueprint creates automatically two aliases, that is, two commands which can be run from the host to use commands in the instance as if they were in the host. In particular, the host docker command executes docker in the instance, and the host docker-compose command executes docker-compose in the instance. 1.4. Using Portainer \u00b6 The Docker blueprint comes with portainer pre-installed, which is a universal container management platform which gives a user-friendly graphical interface for managing your Docker containers. To acces portainer you first need the IP address of your docker VM, this can be done using the command multipass list","title":"Multipass"},{"location":"multipass/#1-multipass-for-beginners","text":"","title":"1. Multipass for Beginners"},{"location":"multipass/#11-introduction","text":"Multipass is a tool to generate cloud-style Ubuntu Virtual Machines(VMs) quickly on Linux, macOS and Windows. It provides a simple but powerful Commamd Line Interface that allows you to create your own local mini-cloud, thereby protecting your host machine from being corrupted. From there you can run most risky processes and applications without damaging your machine. The following commands are useful when working with multipass;","title":"1.1. Introduction"},{"location":"multipass/#111-install-multipass","text":"Run the command below to install multipass snap install multipass","title":"1.1.1. Install multipass"},{"location":"multipass/#112-create-an-instance-in-multipass-with-custom-name","text":"launch multipass --name ` custom name `","title":"1.1.2. Create an instance in multipass with custom name"},{"location":"multipass/#113-use-an-instance","text":"multipass start --name ` custom name `","title":"1.1.3. Use an instance"},{"location":"multipass/#114-to-delete-an-instance","text":"multipass delete --name ` custom name `","title":"1.1.4. To delete an instance"},{"location":"multipass/#115-to-delete-all-instances","text":"multipass delete --all","title":"1.1.5. To delete all instances"},{"location":"multipass/#116-to-recover-an-instance","text":"multipass recover --name ` custom name `","title":"1.1.6. To recover an instance"},{"location":"multipass/#12-using-the-docker-blueprint-in-multipass","text":"The Docker blueprint gives Multipass users an easy way to create Ubuntu instances with Docker installed. It is based on the latest LTS release of Ubuntu, and includes docker engine and Portainer. To launch the Docker VM with default parameters, run the command multipass launch docker This command will create a virtual machine running the latest version of Ubuntu, with Docker and Portainer installed Run the command below to use Docker VM multipass exec docker docker ` To see created Docker images on your machine, run the command docker images To display a list of all the Docker containers in your machine, run the command docker ps You can use it to see all running and stopped containers with their sizes. To stop a Docker instance, run the command docker stop","title":"1.2. Using the docker blueprint in multipass"},{"location":"multipass/#13-using-alias-with-the-docker-commands","text":"The Docker blueprint creates automatically two aliases, that is, two commands which can be run from the host to use commands in the instance as if they were in the host. In particular, the host docker command executes docker in the instance, and the host docker-compose command executes docker-compose in the instance.","title":"1.3. Using alias with the Docker commands"},{"location":"multipass/#14-using-portainer","text":"The Docker blueprint comes with portainer pre-installed, which is a universal container management platform which gives a user-friendly graphical interface for managing your Docker containers. To acces portainer you first need the IP address of your docker VM, this can be done using the command multipass list","title":"1.4. Using Portainer"}]}